package db

import (
	"errors"
	"time"
)

// Job represents the job that is persisted in the repository of the Transcoding
// API.
//
// swagger:model
type Job struct {
	// id of the job. It's automatically generated by the API when creating
	// a new Job.
	//
	// unique: true
	ID string `redis-hash:"-" json:"jobId"`

	// name of the provider
	//
	// required: true
	ProviderName string `redis-hash:"providerName" json:"providerName"`

	// id of the job on the provider
	//
	// required: true
	ProviderJobID string `redis-hash:"providerJobID" json:"providerJobId"`

	// configuration for adaptive streaming jobs
	// Defaults to false.
	//
	// required: false
	StreamingParams StreamingParams `redis-hash:"streamingparams,expand" json:"streamingParams,omitempty"`

	// Time of the creation of the job in the API
	//
	// required: true
	CreationTime time.Time `redis-hash:"creationTime" json:"creationTime"`
}

// StreamingParams represents the params necessary to create Adaptive Streaming jobs
//
// swagger:model
type StreamingParams struct {
	// duration of the segment
	//
	// required: true
	SegmentDuration uint `redis-hash:"segmentDuration" json:"segmentDuration"`

	// the protocol name (hls or dash)
	//
	// required: true
	Protocol string `redis-hash:"protocol" json:"protocol"`
}

// LocalPreset is a struct to persist encoding configurations. Some providers don't have
// the ability to store presets on it's side so we persist locally.
//
// swagger:model
type LocalPreset struct {
	// name of the local preset
	//
	// unique: true
	// required: true
	Name string `redis-hash:"-" json:"name"`
}

// PresetMap represents the preset that is persisted in the repository of the
// Transcoding API
//
// Each presetmap is just an aggregator of provider presets, where each preset in
// the API maps to a preset on each provider
//
// swagger:model
type PresetMap struct {
	// name of the presetmap
	//
	// unique: true
	// required: true
	Name string `redis-hash:"-" json:"name"`

	// mapping of provider name to provider's internal preset id.
	//
	// required: true
	ProviderMapping map[string]string `redis-hash:"pmapping,expand" json:"providerMapping"`

	// set of options in the output file for this preset.
	//
	// required: true
	OutputOpts OutputOptions `redis-hash:"output,expand" json:"output"`
}

// OutputOptions is the set of options for the output file.
//
// This type includes only configuration parameters that are not defined in
// providers (like the extension of the output file).
//
// swagger:model
type OutputOptions struct {
	// extension for the output file, it's usually attached to the
	// container (for example, webm for VP, mp4 for MPEG-4 and ts for HLS).
	//
	// The dot should not be part of the extension, i.e. use "webm" instead
	// of ".webm".
	//
	// required: true
	Extension string `redis-hash:"extension" json:"extension"`
}

// Validate checks that the OutputOptions object is properly defined.
func (o *OutputOptions) Validate() error {
	if o.Extension == "" {
		return errors.New("extension is required")
	}
	return nil
}
